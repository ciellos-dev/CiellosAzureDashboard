@page "{id:int}"
@model CiellosAzureDashboard.Pages.Schedule.EditModel
@Html.AntiForgeryToken()
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "Edit";
}
<h1>Edit</h1>

<h4>Schedule</h4>
<hr />
<div class="row">
    <div class="col-md-7">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Schedule.Id" />
            <div class="form-group">
                <label asp-for="Schedule.Name" class="control-label"></label>
                <input asp-for="Schedule.Name" class="form-control" />
                <span asp-validation-for="Schedule.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Schedule.StartTime" class="control-label"></label>
                <input asp-for="Schedule.StartTime" class="form-control" />
                <span asp-validation-for="Schedule.StartTime" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Schedule.StopTime" class="control-label"></label>
                <input asp-for="Schedule.StopTime" class="form-control" />
                <span asp-validation-for="Schedule.StopTime" class="text-danger"></span>
            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-md-5">
                        <label for="sets" class="control-label">Available applications</label>
                        <select asp-for="AvailableVMsId" asp-items="@Model.AvailableVMsList" id="applications" class="form-control" size="8" multiple="multiple"></select>
                    </div>
                    <div class="col-md-2">
                        <label for="sets"> </label>
                        <button type="button" id="applications_rightAll" class="btn btn-block"><i class="glyphicon glyphicon-forward"></i></button>
                        <button type="button" id="applications_rightSelected" class="btn btn-block"><i class="glyphicon glyphicon-chevron-right"></i></button>
                        <button type="button" id="applications_leftSelected" class="btn btn-block"><i class="glyphicon glyphicon-chevron-left"></i></button>
                        <button type="button" id="applications_leftAll" class="btn btn-block"><i class="glyphicon glyphicon-backward"></i></button>
                    </div>
                    <div class="col-md-5">
                        <label for="sets" class="control-label">Selected applications</label>
                        <select asp-for="SelectedVmsId" asp-items="@Model.SelectedVMsList" id="applications_to" class="form-control" size="8" multiple="multiple"></select>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <input type="submit" value="Save and close" class="btn btn-primary" />
                </div>
            </div>

        </form>
    </div>
</div>

<div>
    <a asp-page="./Index">Back to List</a>
</div>

@section Scripts {
    <script src="https://netdna.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js" asp-append-version="true"></script>
    <script src="~/js/multiselect.js" asp-append-version="true"></script>
    <script type="text/javascript">
        function myFunction(event) {
            alert("myFunction type=" + event.type);
        }
        EventBus.addEventListener("move_to_right", updateVMs);
        EventBus.addEventListener("move_to_left", updateVMs);
        function getJSONFromSelectList(sel) {
            var object = new Object();
            var arr = new Array();

            
            // loop through options in select list
            for (var i = 0, len = sel.options.length; i < len; i++) {
                opt = sel.options[i];

                var obj = new Object();
                obj.Key = opt.value;
                obj.Value = opt.text;
                arr.push(obj);
            }
            object.ScheduleId = "@Model.Schedule.Id";
            object.data = arr;
            return object;
        }
        var applications_to = document.getElementById('applications_to');
        var vms = $('#vms');
        var vms_to = $('#vms_to');
        var vme = $('#vme');
        var vme_to = $('#vme_to');
        function updateVMs(event) {

            var options = {};
            options.url = "?handler=updatelinks";
            options.type = "POST";

            var res = JSON.stringify(getJSONFromSelectList(applications_to));

            options.data = res;
            options.contentType = "application/json";
            options.dataType = "json";

            options.beforeSend = function (xhr) {
                xhr.setRequestHeader("XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            };
            options.success = function (msg) {
                vms.children().remove();
                vms_to.children().remove();
                vme.children().remove();
                vme_to.children().remove();

                $.each(msg.allVMs, function (index, value) {

                    vms.append($('<option></option>').val(value.value).text(value.text));
                    vme.append($('<option></option>').val(value.value).text(value.text));
                });
            };
            //options.error = function () {
            //    alert(response);
            //};
            $.ajax(options);
        };


        $('#applications').multiselect();
        $('#vms').multiselect();
        $('#vme').multiselect();
        
        var SelectedTypeList = document.getElementById('SelectedTypeList');
        var ExcludedTypeList = document.getElementById('ExcludedTypeList');


        ///select/exclude
        $('#displayType').on('change', function (item)
        {
            
            switch (item.currentTarget.selectedOptions[0].label)
            {
                case "ShowAll":
                    {
                        SelectedTypeList.style.display = 'none';
                        ExcludedTypeList.style.display = 'none';
                        break;
                    }
                case "SelectType":
                    {

                        SelectedTypeList.style.display = 'block';
                        ExcludedTypeList.style.display = 'none';
                        break;
                    }
                case "ExcludeType":
                    {
                        SelectedTypeList.style.display = 'none';
                        ExcludedTypeList.style.display = 'block';
                        break;
                    }
            }



        }
        );

        var sets = document.getElementById('sets');
        function addRow() {
            var div = document.createElement('div');
            var rowcount = sets.childElementCount;

            div.className = 'form-inline add-set';

            var divRow = '<div class="col-xs-5">';
            divRow += '      <label asp-for="Dashboard.Links[' + rowcount + '].linkName" class="control-label">Name</label>';
            divRow += '      <input class="form-control valid" id="Dashboard_Links_' + rowcount + '__linkName" name="Dashboard.Links[' + rowcount + '].linkName" type="text" aria-invalid="false">';
            divRow += '      <span asp-validation-for="Dashboard.Links[' + rowcount + '].linkName" class="text-danger" />';
            divRow += '  </div>';
            divRow += '  <div class="col-xs-5">';
            divRow += '      <label asp-for="Dashboard.Links[' + rowcount + '].linkUrl" class="control-label">URL</label>';
            divRow += '      <input class="form-control valid" id="Dashboard_Links_' + rowcount + '__linkUrl" name="Dashboard.Links[' + rowcount + '].linkUrl" type="text" aria-invalid="false">';
            divRow += '       <span asp-validation-for="Dashboard.Links[' + rowcount + '].linkUrl" class="text-danger" />';
            divRow += '  </div>';
            divRow += '  <div class="col-xs-1"><input type="button" value="-" class="glyphicon glyphicon-minus btn btn-danger" onclick="removeRow(this)"></div>';

            div.innerHTML = divRow;

            sets.appendChild(div);
        }
        
        function removeRow(input) {
            sets.removeChild(input.parentNode.parentNode);
        }
        $(document).ready(function () {
            $('#displayType').change();
        });
    </script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

